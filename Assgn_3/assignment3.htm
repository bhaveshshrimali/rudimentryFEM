
<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   <!--
This HTML was auto-generated from MATLAB code.
To make changes, update the MATLAB code and republish this document.
      --><title>assignment3</title><meta name="generator" content="MATLAB 8.1"><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"><meta name="DC.date" content="2016-02-29"><meta name="DC.source" content="assignment3.m"><style type="text/css">
html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}:focus{outine:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}

html { min-height:100%; margin-bottom:1px; }
html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; color:#000; line-height:140%; background:#fff none; overflow-y:scroll; }
html body td { vertical-align:top; text-align:left; }

h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em; color:#d55000; line-height:100%; font-weight:normal; }
h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em; color:#000; font-weight:bold; line-height:140%; border-bottom:1px solid #d6d4d4; display:block; }
h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em; color:#000; font-weight:bold; line-height:140%; }

a { color:#005fce; text-decoration:none; }
a:hover { color:#005fce; text-decoration:underline; }
a:visited { color:#004aa0; text-decoration:none; }

p { padding:0px; margin:0px 0px 20px; }
img { padding:0px; margin:0px 0px 20px; border:none; }
p img, pre img, tt img, li img { margin-bottom:0px; } 

ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }
ul li { padding:0px; margin:0px 0px 7px 0px; }
ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }
ul li ol li { list-style:decimal; }
ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }
ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }
ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }
ol li ol li { list-style-type:lower-alpha; }
ol li ul { padding-top:7px; }
ol li ul li { list-style:square; }

.content { font-size:1.2em; line-height:140%; padding: 20px; }

pre, tt, code { font-size:12px; }
pre { margin:0px 0px 20px; }
pre.error { color:red; }
pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }
pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }

@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }

span.keyword { color:#0000FF }
span.comment { color:#228B22 }
span.string { color:#A020F0 }
span.untermstring { color:#B20000 }
span.syscmd { color:#B28C00 }

.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font-size:0.8em; line-height:140%; font-style:italic; color:#878787; text-align:left; float:none; }
.footer p { margin:0px; }
.footer a { color:#878787; }
.footer a:hover { color:#878787; text-decoration:underline; }
.footer a:visited { color:#878787; }

table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; font-weight:bold; }
table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; }





  </style></head><body><div class="content"><pre class="codeinput">clc; clear <span class="string">all</span>; close <span class="string">all</span>;
syms <span class="string">xc</span> <span class="string">eta</span> <span class="string">xe1</span> <span class="string">xe2</span> <span class="string">xe3</span> <span class="string">ye1</span> <span class="string">ye2</span> <span class="string">ye3</span> <span class="string">real</span>

<span class="comment">%-------------------------------------------------------------------------%</span>
<span class="comment">%Variable Definitions:</span>
<span class="comment">%E- Young's Modulus in pressure units</span>
<span class="comment">%v- Poisson's Ratio</span>
<span class="comment">% %N1- Shape Function 1</span>
<span class="comment">% N2- Shape Function 2</span>
<span class="comment">% N3- Shape Function 2</span>
<span class="comment">% J- Jacobian Matrix</span>
<span class="comment">% dNdX- Differentiation of Shape Function Matrix wrt x and y</span>
<span class="comment">% A, B, C- Entities required for D Matrix</span>
<span class="comment">% xe- x coordinate of node</span>
<span class="comment">% ye- y coordinate of node</span>
<span class="comment">% xc- local x coordinate</span>
<span class="comment">% eta- local y coordinate</span>
<span class="comment">% x- global x coordinate</span>
<span class="comment">% y-global y coordinate</span>
<span class="comment">%-------------------------------------------------------------------------%</span>

E=100;
v=0.25;

N1=xc;
N2=eta;
N3=1-xc-eta;

N=[N1 N2 N3];

dex=[xe1 xe2 xe3];
dey=[ye1 ye2 ye3];

x=N*dex';y=N*dey';
J=[diff(x,xc) diff(y,xc); diff(x,eta) diff(y,eta)]
detJ=det(J)
dNdx=zeros(2,1);
<span class="keyword">for</span> i=1:3
    dNdX(:,i)=J\[diff(N(i),xc);diff(N(i),eta)];
<span class="keyword">end</span>
<span class="keyword">for</span> i=1:3
    B{i}=[dNdX(1,i) 0;0 dNdX(2,i);dNdX(2,i) dNdX(1,i)];
<span class="keyword">end</span>

<span class="comment">%Here det(J)*Be is displayed for compact notation</span>
Be=horzcat(B{1},B{2},B{3});
detJ*Be

A=E*(1-v)/((1+v)*(1-2*v));
B=E*v/((1+v)*(1-2*v));
G=E/(2*(1+v));

D_pstrain=[A B 0; B A 0; 0 0 G];
D_pstress=E/(1-v^2)*[1 v 0; v 1 0; 0 0 0.5*(1-v)];

xe1=4;
ye1=0;
xe2=0;
ye2=3;
xe3=0;
ye3=0;

Ke_pstrain=6*transpose(Be)*D_pstrain*Be;
Ke_pstress=6*transpose(Be)*D_pstress*Be;

Ke_pstrain=double(subs(Ke_pstrain))
Ke_pstress=double(subs(Ke_pstress))
</pre><pre class="codeoutput"> 
J =
 
[ xe1 - xe3, ye1 - ye3]
[ xe2 - xe3, ye2 - ye3]
 
 
detJ =
 
xe1*ye2 - xe2*ye1 - xe1*ye3 + xe3*ye1 + xe2*ye3 - xe3*ye2
 
 
ans =
 
[ ye2 - ye3,         0, ye3 - ye1,         0, ye1 - ye2,         0]
[         0, xe3 - xe2,         0, xe1 - xe3,         0, xe2 - xe1]
[ xe3 - xe2, ye2 - ye3, xe1 - xe3, ye3 - ye1, xe2 - xe1, ye1 - ye2]
 

Ke_pstrain =

   45.0000         0         0   20.0000  -45.0000  -20.0000
         0   15.0000   20.0000         0  -20.0000  -15.0000
         0   20.0000   26.6667         0  -26.6667  -20.0000
   20.0000         0         0   80.0000  -20.0000  -80.0000
  -45.0000  -20.0000  -26.6667  -20.0000   71.6667   40.0000
  -20.0000  -15.0000  -20.0000  -80.0000   40.0000   95.0000


Ke_pstress =

   40.0000         0         0   13.3333  -40.0000  -13.3333
         0   15.0000   20.0000         0  -20.0000  -15.0000
         0   20.0000   26.6667         0  -26.6667  -20.0000
   13.3333         0         0   71.1111  -13.3333  -71.1111
  -40.0000  -20.0000  -26.6667  -13.3333   66.6667   33.3333
  -13.3333  -15.0000  -20.0000  -71.1111   33.3333   86.1111

</pre><p class="footer"><br><a href="http://www.mathworks.com/products/matlab/">Published with MATLAB&reg; R2013a</a><br></p></div><!--
##### SOURCE BEGIN #####
clc; clear all; close all;
syms xc eta xe1 xe2 xe3 ye1 ye2 ye3 real


%Variable Definitions: 
%E- Young's Modulus in pressure units
%v- Poisson's Ratio
% %N1- Shape Function 1
% N2- Shape Function 2
% N3- Shape Function 2
% J- Jacobian Matrix
% dNdX- Differentiation of Shape Function Matrix wrt x and y
% A, B, C- Entities required for D Matrix
% xe- x coordinate of node
% ye- y coordinate of node
% xc- local x coordinate
% eta- local y coordinate
% x- global x coordinate
% y-global y coordinate


E=100;
v=0.25;

N1=xc;
N2=eta;
N3=1-xc-eta;

N=[N1 N2 N3];

dex=[xe1 xe2 xe3];
dey=[ye1 ye2 ye3];

x=N*dex';y=N*dey';
J=[diff(x,xc) diff(y,xc); diff(x,eta) diff(y,eta)]
detJ=det(J)
dNdx=zeros(2,1);
for i=1:3
    dNdX(:,i)=J\[diff(N(i),xc);diff(N(i),eta)];
end
for i=1:3
    B{i}=[dNdX(1,i) 0;0 dNdX(2,i);dNdX(2,i) dNdX(1,i)];
end

%Here det(J)*Be is displayed for compact notation
Be=horzcat(B{1},B{2},B{3});
detJ*Be

A=E*(1-v)/((1+v)*(1-2*v));
B=E*v/((1+v)*(1-2*v));
G=E/(2*(1+v));

D_pstrain=[A B 0; B A 0; 0 0 G];
D_pstress=E/(1-v^2)*[1 v 0; v 1 0; 0 0 0.5*(1-v)];

xe1=4;
ye1=0;
xe2=0;
ye2=3;
xe3=0;
ye3=0;

Ke_pstrain=6*transpose(Be)*D_pstrain*Be;
Ke_pstress=6*transpose(Be)*D_pstress*Be;

Ke_pstrain=double(subs(Ke_pstrain))
Ke_pstress=double(subs(Ke_pstress))




##### SOURCE END #####
--></body></html>